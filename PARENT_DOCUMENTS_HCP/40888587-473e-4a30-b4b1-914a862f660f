872/907

6/25/24, 11:34 AM

Content Platform System Management Help

The Python example below implements a paged query that uses multiple requests to retrieve a large number of operation records in batches of 50 per request. This query retrieves records for all create operations on objects in the /customers/widgetco/orders directory in the default namespace and returns basic information for each record.

The query uses a JSON request body and requests results in JSON format. #!/usr/bin/env python # encoding: utf-8

import pycurl

import StringIO import time

import json

class OperationBasedQueryTool(): queryArguments = {'operation': {'count': 1, 'verbose': 'false',

'objectProperties': 'utf8Name, type, size',

'systemMetadata': {'changeTime': {}, 'directories': {'directory': []}, 'namespaces': {'namespace': []}, 'transactions': {'transaction': []}}}}

def __init__(self):

self.complete = False

def setConnectionInfo(self, authToken, hostName, urlName): """ Set all connection info for subsequent query requests.

@param authToken: authorization token @param hostName: Hostname of the target cluster @param urlName: Full URL for the query interface """ self.curl = pycurl.Curl()

requestHeaders = {pycurl.HTTPHEADER :["Authorization: HCP "authToken, "Accept:application/json", "Content-Type:

application/json", "Host: admin.%s" % (hostName)]} self.curl.setopt(pycurl.FAILONERROR, 1)

self.curl.setopt(pycurl.HTTPHEADER,

requestHeaders[pycurl.HTTPHEADER]) self.curl.setopt(pycurl.URL, urlName) for header, value in requestHeaders.iteritems(): self.curl.setopt(header, value)

self.curl.setopt(pycurl.CUSTOMREQUEST, 'POST') self.curl.setopt(pycurl.SSL_VERIFYPEER, 0)

self.curl.setopt(pycurl.SSL_VERIFYHOST, 0) self.curl.setopt(pycurl.VERBOSE, 0)

def setQueryParameters(self, count, verbose, directories, namespaces, transactions, objectProperties, startTimeMillis=0, endTimeMillis=int(round(time.time() * 1000))):

""" Set all parameters related to the query. @param count: The number of results to return for each query.

@param verbose: Indication to return all object property values. Value is either true or false.

@param directories: Dictionary containing list of directory paths.

@param namespaces: Dictionary containing list of namespaces. @param transactions: Dictionary containing list of transaction

types. @param objectProperties: String containing comma-separated list of

object properties to return for each operation record. @param startTimeMillis: The starting timestamp in milliseconds of

the query window. Default is 0 (zero). @param endTimeMillis: The ending timestamp in milliseconds of the

query window. Default is one minute before time of request. """ self.queryArguments['operation']['count'] = count self.queryArguments['operation']['objectProperties'] = objectProperties

self.queryArguments['operation']['verbose'] = verbose self.queryArguments['operation']['systemMetadata']['directories'] =

directories self.queryArguments['operation']['systemMetadata']['namespaces'] =

namespaces self.queryArguments['operation']['systemMetadata']['transactions'] = transactions

self.queryArguments['operation']['systemMetadata']['changeTime'] ['start'] = startTimeMillis

self.queryArguments['operation']['systemMetadata']['changeTime'] ['end'] = endTimeMillis

def issueQuery(self):

""" Issue an operation-based query request. """ self.curl.setopt(pycurl.POSTFIELDS, json.dumps(self.queryArguments))