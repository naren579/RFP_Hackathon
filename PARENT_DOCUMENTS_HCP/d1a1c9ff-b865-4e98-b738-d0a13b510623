the object data. The outlying systems respond to client requests for object data by reading the data from the central system.

https://docs.hitachivantara.com/internal/api/webapp/print/72cda581-a515-4975-93dd-f591140b46a3

60/907

6/25/24, 11:33 AM Content Platform System Management Help

In this scenario, the replication topology should include a disaster recovery system (that is, a replica of the central system) to protect against data loss in case of a catastrophic failure of the central system.

Important: HCP does not prevent you from removing a namespace from a replication topology even if the namespace contains metadata-only objects on one or more systems in that topology. This can result in data for objects in that namespace being permanently inaccessible from those systems. In most cases, HCP warns you if the modification you’re making

to a replication link would cause this condition to occur. Rehydration

HCP reads objects most efficiently from the ingest tier, which can be either primary running storage or HCP S Series storage, on the system that’s the target of the read request. If

you anticipate frequent reads of the same objects in a namespace while the objects are stored on a specific extended storage tier, consider reconfiguring the service plan used by the namespace to enable rehydration on the applicable tier. Similarly, if you anticipate frequent reads of the same objects in a namespace that contains metadata-only objects or

remote cloud storage, consider configuring the service plan used by the namespace to enable rehydration on the tier.

When you use rehydration, the rehydration days time period is started or restarted with reads over a day since the last read. The rehydration days time period can even be started before the object tiers. If an object tiers with a rehydration days time period in effect, the copy on primary storage will not be deleted. As long as the rehydration days time period remains in effect with additional reads, the copy on primary storage will not be deleted.

Default service plan configuration settings

Each HCP system has a service plan named Default that’s automatically created and configured during the HCP software installation. The Default service plan is applied to each tenant and namespace for which another service plan is not explicitly selected.

When the HCP system is first installed, the Default service plan defines primary running storage (the ingest tier) as the only storage tier. On HCP with SAN-attached storage and VM systems, by default, the ingest tier DPL and MPL are both set to one. On HCP with internal storage systems, by default, the ingest tier DPL and MPL are both set to two. You can modify the Default service plan at any time to define one or more additional storage tiers or to change the ingest tier DPL and MPL settings.

General considerations for namespace service plans

Initially, when you add an object to a namespace, HCP creates and stores the data on the ingest tier and metadata for the object on primary running storage. For each object that’s stored in a namespace:

1. HCP creates primary metadata for it. This metadata consists of information HCP already knows, such as the creation date, and, for objects only, the data size, hash

algorithm, and cryptographic hash value generated by that algorithm. It also includes metadata that was either inherited or specified in the write request, such as retention setting, UID, and GID.

2. HCP creates the number of additional copies of the primary metadata required to satisfy the ingest tier metadata protection level (MPL) that’s set for the namespace by its

service plan. HCP then distributes all copies of the primary metadata among the HCP storage nodes.

3. HCP creates the number of copies of the object data required to satisfy the ingest tier data protection level (DPL) that’s set for the namespace by its service plan. HCP then

distributes all copies of the object data either among the HCP storage nodes or HCP S Series Nodes, depending on the ingest tier.

Each copy of the primary metadata for the object points to all copies of the object data. However, the object data is not necessarily stored on the same node as the primary metadata for the object.

4. HCP stores a copy of the metadata with each copy of the object data. Each copy, called the secondary metadata, lets HCP reconstruct the primary metadata should that become necessary.

Object content stored on different types of storage