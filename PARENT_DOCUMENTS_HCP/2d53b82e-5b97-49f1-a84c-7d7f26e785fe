
                   <p style="text-align: center">
                       <b>Title:</b> A retention class is a named retention value that, when used as the retention setting for an object, specifies how long the object must remain in the repository. This value can be:
A duration after object creation. For example, a retention class named could have a duration of 21 years. All objects that have that class as their retention HlthReg-107
setting could not be deleted for 21 years after theyâ€™re created.
One of these special values:
Deletion Allowed (0)
Deletion Prohibited (-1)
Initial Unspecified (-2)
Retention class duration values use this format:
A+yearsy+monthsM+daysd
In this format, A represents the time at which the object was created. For example, this value specifies a retention period of one year, two months, and three days:
A+1y+2M+3d
The duration specification can omit portions with zero values. For example, this value specifies a six-month retention period:
A+6M
You can use retention classes to consistently manage data that must conform to a specific retention rule. For example, if local law requires that medical records be kept for a specific
number of years, you can use a retention class to enforce that requirement.
Tenant administrators create retention classes for namespaces. When creating a class, the administrator specifies the class name, the retention setting, and whether HCP can
automatically delete objects in the class when the retention period expires.
Note: Automatic deletion must be enabled for the namespace for objects under retention to be automatically deleted.
Each namespace has its own set of retention classes. You cannot apply a retention class defined in one namespace to an object in a different namespace.
A namespace can be configured to allow administrative users to increase or decrease class retention times and delete classes. Otherwise, the retention time for a class can only be
increased, and classes cannot be deleted. In all cases, any change to a retention class affects the retention period of all objects in that class.
If a retention class is deleted, the objects assigned to that class have a retention setting of Deletion Prohibited (-1) and cannot be deleted.
If a new retention class is created with the same name as a deleted retention class, existing objects in the deleted class get the retention setting of the new class.
You can assign a retention class to an existing object using any namespace access protocol. With the REST API, you can assign a retention class to an object when you store the
object in the namespace, thereby overriding the default retention setting.
Retention-related request headers
The table below describes the retention-related request headers you can use with the S3 compatible API.<br>
                       <b>Bounding box:</b> x1=185, y1=1559, x2=1516, y2=2017
                   </p>
                   <div align="center"><table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Header</td>
      <td>Methods</td>
      <td>Description</td>
    </tr>
    <tr>
      <th>1</th>
      <td>x-hcp-retention</td>
      <td>PUT object\nPUT object copy\nPOST object complete multipart upload</td>
      <td>Specifies the retention value for the object being stored. This value can be a fixed date,\nan offset, a retention class, or a special value.</td>
    </tr>
    <tr>
      <th>2</th>
      <td>x-hcp-retentionhold</td>
      <td>PUT object\nPUT object copy\nPOST object complete multipart upload</td>
      <td>Specifies whether the object is on hold. This value can be either or true false.</td>
    </tr>
    <tr>
      <th>3</th>
      <td>x-hcp-privileged</td>
      <td>DELETE object\nDELETE multiple objects</td>
      <td>If you have privileged permission and the bucket allows it, this enables a privileged\ndelete on an object that is under retention. The valid value for this header is a text string\nof up to 1,024 characters long, which can contain any valid UTF-8 characters, including\nwhite space.</td>
    </tr>
  </tbody>
</table></div>
                   <hr>
                