HCP namespaces can use either balanced or unbalanced directory usage. You can configure this setting at the time of creating a namespace and cannot modify later. Balanced directory usage is selected by default. This type of directory usage requires a well distributed directory structure to avoid hot spotting and to ensure maximized performance. This setting can be applied to namespaces optimized for cloud protocols as well as for those optimized for all protocols.

With unbalanced directory usage, you do not need to know how the applications ingest data or ensure that the objects are distributed across a diverse directory structure. Unbalanced directory usage setting can only be applied to namespaces that are optimized only for cloud protocols.

XML checking for custom metadata By default, when a custom metadata annotation is added to or replaced in a namespace, HCP checks whether it contains well-formed XML. If the XML is not well-formed, HCP rejects the annotation.

For any given namespace, you can choose to allow users to provide annotations in non-XML formats (for example, as thumbnail images to accompany large objects with image content). In this case, you need to disable custom metadata XML checking for the namespace so that HCP accepts non-XML annotations.

XML checking applies only when annotations are added to or replaced in a namespace. It does not apply to annotations that already exist in the namespace.

You can enable or disable custom metadata XML checking for a namespace at any time. Note: If the XML in an annotation for an object includes a very large number of different elements and attributes, HCP may determine that the XML is not well-formed, even if it is, and reject the annotation. If this happens, the user can try restructuring the XML so that it includes fewer different elements and attributes. Alternatively, you can temporarily disable

custom metadata XML checking to allow that XML to be stored in the namespace. Versioning

Versioning is the creation of multiple versions of objects. Versioning is supported only with the REST and S3 compatible APIs. Users cannot create new versions of objects or access old versions through any other protocol.

Any given namespace can be configured to support versioning or not to support it. However, you cannot enable versioning for a namespace while the WebDAV, CIFS, NFS, or SMTP protocol is enabled for that namespace. Conversely, you cannot enable the WebDAV, CIFS, NFS, or SMTP protocol for a namespace while versioning is enabled for that namespace. You can disable versioning at any time.

When versioning is enabled for a namespace, you can set a time for version pruning. Version pruning is the automatic deletion of previous versions of objects that are older than a specified amount of time. If you disable versioning after it was enabled, old versions of objects remain in the namespace and continue to be pruned according to the pruning settings. If you change the pruning settings, the new settings apply to old versions regardless of whether versioning is enabled.

https://docs.hitachivantara.com/internal/api/webapp/print/72cda581-a515-4975-93dd-f591140b46a3

239/907

6/25/24, 11:33 AM

Content Platform System Management Help

You can create namespaces with versioning enabled only if allowed to do so by the tenant configuration. system-level administrators can change this configuration from not allowing the creation of namespaces with versioning enabled to allowing it. However, they cannot do the reverse. Compatibility property

To support compatibility with other storage products, POSIX atime values can be synchronized with HCP retention settings. For information about the effects of this option, see Using a Namespace.

When you create a namespace, both of this features is disabled. You can enable or disable it at any time. Disposition

Disposition is the automatic deletion of objects. Disposition can be enabled for:

Objects with expired retention periods. To be eligible for disposition, an object must have a retention setting thatâ€™s either:

A date in the past A retention class with automatic deletion enabled that results in a calculated expiration date in the past

Objects flagged as replication collisions.

Disposition has the benefit of automatically freeing storage space for the creation of more objects. Without disposition, users need to explicitly delete qualified objects to free the occupied space.

Disposition deletes only the current version of a versioned object. It does not delete old versions.

Disposition is enabled on a per-namespace basis. When you create a namespace, this feature is disabled. You can change this setting at any time. Automatic abort of multipart uploads