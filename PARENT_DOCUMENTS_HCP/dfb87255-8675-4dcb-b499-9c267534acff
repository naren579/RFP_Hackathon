If possible, you should avoid chunking data because it increases the overhead required for the PUT operation.

Using the REST API with objects open for write

These considerations apply to using the REST API with an object that is open for write:

If you try to write to the object: https://docs.hitachivantara.com/internal/api/webapp/print/72cda581-a515-4975-93dd-f591140b46a3

787/907

6/25/24, 11:34 AM

Content Platform System Management Help

If the namespace supports versioning, HCP creates a new version of the object.

If the namespace does not support versioning, HCP returns an HTTP 409 (Conflict) error code and does not perform the operation.

If you try to retrieve, check the existence of, or copy the object:

If the namespace supports versioning:

If the request does not specify a version ID and the object has one or more old versions, HCP performs the requested operation against the most recent version that is not open for write. However, if that version is a delete marker, HCP returns an HTTP 404 (Not Found) error code and does not perform the

operation. If the request does not specify a version ID and the object doesn’t have any old versions, HCP returns an HTTP 404 (Not Found) error code and does not

perform the requested operation. If the namespace does not support versioning, HCP returns an HTTP 404 (Not Found) error code and does not perform the operation.

If you try to delete the object, HCP returns an HTTP 404 (Not Found) error code and does not delete the object.

Note: Depending on the timing, the delete request may result in a busy error. In that case, wait one or two seconds and then try the request again. Failed REST API write operations

A write operation is considered to have failed if either of these is true:

The target node failed while the object was open for write. The TCP connection broke while the object was open for write (for example, due to a network failure or the abnormal termination of the client application).

Also, in some circumstances, a write operation is considered to have failed if system hardware failed while the object was open for write.

If a write fails, HCP does not create a new object or version.

Tip: If a write operations fails, retry the request.

Storing zero-sized files with the REST API

When you store a zero-sized file with the REST API, the resulting object has no data. Because the REST API causes a flush and a close even when no data is present, this object is

WORM and is treated like any other object in the namespace. Persistent connections with the REST API

HCP supports persistent connections with the REST API. Following a request for an operation, HCP keeps the connection open for 60 seconds, so a subsequent request can use the same connection.

Persistent connections enhance performance because they avoid the overhead of opening and closing multiple connections. In conjunction with persistent connections, using

multiple threads so that operations can run concurrently provides still better performance.

If the persistent connection timeout period is too short, ask your tenant administrator about having it changed.

Note: With persistent connections, if a single IP address has more than 254 concurrent open connections, those above the first 254 may have to wait as long as ten minutes to be

serviced. This includes connections where the request explicitly targeted the IP address, as well as connections where the HCP hostname resolved to the target IP address. To avoid this issue, either don’t use persistent connections or ensure that no more than 254 threads are working against a single node at any time. Connection failure handling

You should retry a REST API request if either of these happens:

The client cannot establish an HTTP connection to the HCP system. The connection breaks while HCP is processing a request. In this case, the most likely cause is that the node processing the request became unavailable.

When retrying the request:

If the original request used the hostname of the HCP system in the URL, repeat the request in the same way. If the original request used an IP address, retry the request using either a different IP address or the hostname of the system.

If the connection breaks while HCP is processing a GET request, you may not know whether the returned data is all or only some of the object data. In this case, you can check the