The object starts out with the annotations named a1, a2, and a3 on both system A and system B.

The list below shows a sequence of events in which the annotations for the object are changed and the changes are then replicated.

1. On system B, a client changes the content of a1. 2. On system A, a client deletes a1. 3. On system A, a client changes the content of a2.

4. On system B, a client changes the content of a2. 5. On system A, a client deletes a3. 6. On system B, a client changes the content of a3. 7. The changes on system A are replicated to system B. The resulting annotations for the object on system B are: a2 with the changed content from system B a3 with the changed content from system B

8. The changes on system B are replicated to system A, the resulting annotations for the object on system A are:

a2 with the changed content from system B a3 with the changed content from system B Access control list collisions

An ACL collision occurs when these events occur in the order shown:

1. Different changes are made to the ACL for a given object on each of two systems in a replication topology. 2. The changed ACL on one of the systems is replicated to the other system.

An ACL is treated as a single unit. If a collision occurs when a changed ACL for a given object is replicated from one system (system A) in a replication topology to another system (system B) in the topology:

If the last change to the ACL on system A is more recent than the last change to the ACL on system B, HCP changes the ACL on system B to match the changed ACL on system A If the last change to the ACL on system B is more recent than the last change to the ACL on system A, HCP does not change the ACL on system B

For example, suppose the ACL for a given object starts out with these grants on both system A and system B:

All users: read User lgreen: write User mwhite: write, delete The list below shows a sequence of events in which the ACL for the object is changed and the change is then replicated.

1. On system B, a client changes the grants in the ACL to:

All users: read User lgreen: write, delete User pdgrey: write

2. On system A, a client changes the grants in the ACL to:

All users: read User mwhite: write User pdgrey: write

3. The changed ACL on system A is replicated to system B. The resulting ACL for the object on system B contains these grants:

All users: read User mwhite: write User pdgrey: write Configuration collisions

A configuration collision occurs when these events occur in the order shown:

1. Different changes are made to the same configuration property on each of two systems in a replication topology. 2. The changed property on one of the systems is replicated to the other system.

Examples of configuration properties are:

The data access permission mask for a namespace The default shred setting for a namespace

https://docs.hitachivantara.com/internal/api/webapp/print/72cda581-a515-4975-93dd-f591140b46a3

245/907

6/25/24, 11:33 AM

Content Platform System Management Help

The HTTP protocol enabled setting for a namespace The default versioning setting for new namespaces The roles for a user account The data access permissions a group account has for a namespace The protocol optimization setting on a namespace Certain groups of properties are treated as a single unit. Generally, these groups consist of properties that are updated by a single submission in the Tenant Management Console. Two notable exceptions to this rule are data access permissions for user accounts and content properties for content classes. In these cases, each set of data access permissions for a namespace and each content property is treated as an individual property.

If a collision occurs when a configuration change is replicated from one system (system A) in a replication topology to another system (system B) in the topology: