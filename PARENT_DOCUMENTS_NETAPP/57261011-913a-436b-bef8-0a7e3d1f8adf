The StorageGRID authorization token is provided in the output. You can now use the token for other requests, similar to how you would use the API if SSO was not being used.

3. If you want to use curl requests, use the following procedure. a. Declare the variables needed to sign in.

export SAMLUSER='my-sso-username' export SAMLPASSWORD='my-password' export TENANTACCOUNTID='12345' export STORAGEGRID_ADDRESS='storagegrid.example.com' To access the Grid Management API, use 0 as TENANTACCOUNTID. 301

◦ Use curl requests. Go to step 3.

2. If you want to use the storagegrid-ssoauth.py script, pass the script to the Python interpreter and run the script.

When prompted, enter values for the following arguments:

The SSO method. You can enter any variation of "pingfederate" (PINGFEDERATE, pingfederate, and so on).

The SSO username ◦ The domain where StorageGRID is installed. This field is not used for PingFederate. You can leave it blank or enter any value.

The address for StorageGRID ◦ The tenant account ID, if you want to access the Tenant Management API.

The StorageGRID authorization token is provided in the output. You can now use the token for other requests, similar to how you would use the API if SSO was not being used.

3. If you want to use curl requests, use the following procedure. a. Declare the variables needed to sign in.

export SAMLUSER='my-sso-username' export SAMLPASSWORD='my-password' export TENANTACCOUNTID='12345' export STORAGEGRID_ADDRESS='storagegrid.example.com' To access the Grid Management API, use 0 as TENANTACCOUNTID.

b. To receive a signed authentication URL, issue a POST request to /api/v3/authorize-saml, and

remove the additional JSON encoding from the response.

This example shows a POST request for a signed authentication URL for TENANTACCOUNTID. The results will be passed to python -m json.tool to remove the JSON encoding.

302

curl -X POST "https://$STORAGEGRID_ADDRESS/api/v3/authorize-saml" \ -H "accept: application/json" -H "Content-Type: application/json" \ --data "{\"accountId\": \"$TENANTACCOUNTID\"}" | python -m json.tool

The response for this example includes a signed URL that is URL-encoded, but it does not include the additional JSON-encoding layer.

{ "apiVersion": "3.0", "data": "https://my-pf-baseurl/idp/SSO.saml2?...", "responseTime": "2018-11-06T16:30:23.355Z", "status": "success" } c. Save the SAMLRequest from the response for use in subsequent commands.

export SAMLREQUEST="https://my-pf-baseurl/idp/SSO.saml2?..."

d. Export the response and cookie, and echo the response:

RESPONSE=$(curl -c - "$SAMLREQUEST")

echo "$RESPONSE" | grep 'input type="hidden" name="pf.adapterId" id="pf.adapterId"'

e. Export the 'pf.adapterId' value, and echo the response: export ADAPTER='myAdapter'

echo "$RESPONSE" | grep 'base'

f. Export the 'href' value (remove the trailing slash /), and echo the response:

export BASEURL='https://my-pf-baseurl'

303

304

echo "$RESPONSE" | grep 'form method="POST"'

g. Export the 'action' value:

export SSOPING='/idp/.../resumeSAML20/idp/SSO.ping' h. Send cookies along with credentials:

curl -b <(echo "$RESPONSE") -X POST "$BASEURL$SSOPING" \ --data "pf.username=$SAMLUSER&pf.pass= $SAMLPASSWORD&pf.ok=clicked&pf.cancel=&pf.adapterId=$ADAPTER" --include

i. Save the SAMLResponse from the hidden field:

export SAMLResponse='PHNhbWxwOlJlc3BvbnN...1scDpSZXNwb25zZT4='

j. Using the saved SAMLResponse, make a StorageGRID/api/saml-response request to generate a StorageGRID authentication token. echo "$RESPONSE" | grep 'base'

f. Export the 'href' value (remove the trailing slash /), and echo the response:

export BASEURL='https://my-pf-baseurl'

303

304

echo "$RESPONSE" | grep 'form method="POST"'

g. Export the 'action' value:

export SSOPING='/idp/.../resumeSAML20/idp/SSO.ping' h. Send cookies along with credentials:

curl -b <(echo "$RESPONSE") -X POST "$BASEURL$SSOPING" \ --data "pf.username=$SAMLUSER&pf.pass= $SAMLPASSWORD&pf.ok=clicked&pf.cancel=&pf.adapterId=$ADAPTER" --include

i. Save the SAMLResponse from the hidden field:

export SAMLResponse='PHNhbWxwOlJlc3BvbnN...1scDpSZXNwb25zZT4='

j. Using the saved SAMLResponse, make a StorageGRID/api/saml-response request to generate a StorageGRID authentication token.

For RelayState, use the tenant account ID or use 0 if you want to sign in to the Grid Management API.

curl -X POST "https://$STORAGEGRID_ADDRESS:443/api/saml-response" \ -H "accept: application/json" \ --data-urlencode "SAMLResponse=$SAMLResponse" \ --data-urlencode "RelayState=$TENANTACCOUNTID" \ | python -m json.tool

The response includes the authentication token.

{ "apiVersion": "3.0", "data": "56eb07bf-21f6-40b7-af0b-5c6cacfb25e7", "responseTime": "2018-11-07T21:32:53.486Z", "status": "success" }

k. Save the authentication token in the response as MYTOKEN.

export MYTOKEN="56eb07bf-21f6-40b7-af0b-5c6cacfb25e7"