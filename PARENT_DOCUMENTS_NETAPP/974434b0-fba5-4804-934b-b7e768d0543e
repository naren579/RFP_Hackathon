To remove a specific version, the requestor must be the bucket owner and use the versionId subresource. Using this subresource permanently deletes the version. If the versionId corresponds to a delete marker, the response header x-amz-delete-marker is returned set to true. All objects in a StorageGRID bucket are owned by the bucket owner, including objects created by an anonymous user, or by another account.

Data objects ingested to the StorageGRID system through Swift can’t be accessed through S3.

The following table describes how StorageGRID implements S3 REST API object operations. Operation

Implementation

DeleteObject

Multi-Factor Authentication (MFA) and the response header x-amz-mfa aren’t supported.

When processing a DeleteObject request, StorageGRID attempts to immediately remove all copies of the object from all stored locations. If successful, StorageGRID returns a response to the client immediately. If all copies can’t be removed within 30 seconds (for example, because a location is temporarily unavailable), StorageGRID queues the copies for removal and then indicates success to the client. Versioning

To remove a specific version, the requestor must be the bucket owner and use the versionId subresource. Using this subresource permanently deletes the version. If the versionId corresponds to a delete marker, the response header x-amz-delete-marker is returned set to true.

If an object is deleted without the versionId subresource on a version enabled bucket, it results in the generation of a delete marker. The versionId for the delete marker is returned using the x-amz-version-id response header, and the x-amz- delete-marker response header is returned set to true.

If an object is deleted without the versionId subresource on a version suspended bucket, it results in a permanent deletion of an already existing 'null' version or a 'null' delete marker, and the generation of a new 'null' delete marker. The x-amz-delete- marker response header is returned set to true. Note: In certain cases, multiple delete markers might exist for an object. See Use S3 REST API to configure S3 Object Lock to learn how to delete object versions in GOVERNANCE mode.

911

Operation

DeleteObjects

(previously named DELETE Multiple Objects)

DeleteObjectTagging

GetObject

GetObjectAcl

GetObjectLegalHold

GetObjectRetention

GetObjectTagging

HeadObject

RestoreObject PutObject

912

Implementation

Multi-Factor Authentication (MFA) and the response header x-amz-mfa aren’t supported.

Multiple objects can be deleted in the same request message.

See Use S3 REST API to configure S3 Object Lock to learn how to delete object versions in GOVERNANCE mode.

Uses the tagging subresource to remove all tags from an object. Versioning

If the versionId query parameter is not specified in the request, the operation deletes all tags from the most recent version of the object in a versioned bucket. If the current version of the object is a delete marker, a "MethodNotAllowed" status is returned with the x-amz- delete-marker response header set to true. GetObject

If the necessary access credentials are provided for the account, the operation returns a positive response and the ID, DisplayName, and Permission of the object owner, indicating that the owner has full access to the object.

Use S3 REST API to configure S3 Object Lock

Use S3 REST API to configure S3 Object Lock

Uses the tagging subresource to return all tags for an object. Versioning

If the versionId query parameter is not specified in the request, the operation returns all tags from the most recent version of the object in a versioned bucket. If the current version of the object is a delete marker, a "MethodNotAllowed" status is returned with the x-amz- delete-marker response header set to true. HeadObject

RestoreObject

PutObject

Operation

CopyObject

(previously named PUT Object - Copy)

PutObjectLegalHold

PutObjectRetention

PutObjectTagging

SelectObjectContent

Implementation

CopyObject

Use S3 REST API to configure S3 Object Lock

Use S3 REST API to configure S3 Object Lock

Uses the tagging subresource to add a set of tags to an existing object. Object tag limits If the necessary access credentials are provided for the account, the operation returns a positive response and the ID, DisplayName, and Permission of the object owner, indicating that the owner has full access to the object.

Use S3 REST API to configure S3 Object Lock

Use S3 REST API to configure S3 Object Lock

Uses the tagging subresource to return all tags for an object. Versioning

If the versionId query parameter is not specified in the request, the operation returns all tags from the most recent version of the object in a versioned bucket. If the current version of the object is a delete marker, a "MethodNotAllowed" status is returned with the x-amz- delete-marker response header set to true. HeadObject

RestoreObject

PutObject

Operation

CopyObject