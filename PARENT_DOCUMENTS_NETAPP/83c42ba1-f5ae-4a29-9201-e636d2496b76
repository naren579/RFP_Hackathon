When you create a platform services endpoint, you specify the information that StorageGRID needs to access the external destination. For example, if you want to replicate objects from a StorageGRID bucket to an Amazon S3 bucket, you create a platform services endpoint that includes the information and credentials StorageGRID needs to access the destination bucket on Amazon.

Each type of platform service requires its own endpoint, so you must configure at least one endpoint for each platform service you plan to use. After defining a platform services endpoint, you use the endpoint’s URN as the destination in the configuration XML used to enable the service. You can use the same endpoint as the destination for more than one source bucket. For example, you could configure several source buckets to send object metadata to the same search integration endpoint so that you can perform searches across multiple buckets. You can also configure a source bucket to use more than one endpoint as a target, which enables you to do things like send notifications about object creation to one Amazon Simple Notification Service (Amazon SNS) topic and notifications about object deletion to a second Amazon SNS topic. Endpoints for CloudMirror replication

StorageGRID supports replication endpoints that represent S3 buckets. These buckets might be hosted on Amazon Web Services, the same or a remote StorageGRID deployment, or another service.

Endpoints for notifications

StorageGRID supports Amazon SNS and Kafka endpoints. Simple Queue Service (SQS) or AWS Lambda endpoints aren’t supported.

For Kafka endpoints, Mutual TLS is not supported. As a result, if you have ssl.client.auth set to required in your Kafka broker configuration, it might cause Kafka endpoint configuration issues. Endpoints for the search integration service

StorageGRID supports search integration endpoints that represent Elasticsearch clusters. These Elasticsearch clusters can be in a local data center or hosted in an AWS cloud or elsewhere.

The search integration endpoint refers to a specific Elasticsearch index and type. You must create the index in Elasticsearch before creating the endpoint in StorageGRID, or endpoint creation will fail. You don’t need to create the type before creating the endpoint. StorageGRID will create the type if required when it sends object metadata to the endpoint.

Related information Administer StorageGRID

834

Specify URN for platform services endpoint

When you create a platform services endpoint, you must specify a Unique Resource Name (URN). You will use the URN to reference the endpoint when you create a configuration XML for the platform service. The URN for each endpoint must be unique.

StorageGRID validates platform services endpoints as you create them. Before you create a platform services endpoint, confirm that the resource specified in the endpoint exists and that it can be reached. URN elements

The URN for a platform services endpoint must start with either arn:aws or urn:mysite, as follows:

If the service is hosted on Amazon Web Services (AWS), use arn:aws

If the service is hosted on Google Cloud Platform (GCP), use arn:aws

If the service is hosted locally, use urn:mysite

For example, if you are specifying the URN for a CloudMirror endpoint hosted on StorageGRID, the URN might begin with urn:sgws.

The next element of the URN specifies the type of platform service, as follows: Service

Type

CloudMirror replication

s3

Notifications

sns or kafka

Search integration

es

For example, to continue specifying the URN for a CloudMirror endpoint hosted on StorageGRID, you would add s3 to get urn:sgws:s3.

The final element of the URN identifies the specific target resource at the destination URI. Service

Specific resource

CloudMirror replication

bucket-name

Notifications

sns-topic-name or kafka-topic-name

Search integration

domain-name/index-name/type-name

Note: If the Elasticsearch cluster is not configured to create indexes automatically, you must create the index manually before you create the endpoint.

835

URNs for services hosted on AWS and GCP

For AWS and GCP entities, the complete URN is a valid AWS ARN. For example:

CloudMirror replication: arn:aws:s3:::bucket-name

Notifications:

arn:aws:sns:region:account-id:topic-name

Search integration: The next element of the URN specifies the type of platform service, as follows: Service

Type

CloudMirror replication

s3

Notifications

sns or kafka

Search integration

es

For example, to continue specifying the URN for a CloudMirror endpoint hosted on StorageGRID, you would add s3 to get urn:sgws:s3.

The final element of the URN identifies the specific target resource at the destination URI. Service

Specific resource

CloudMirror replication

bucket-name

Notifications

sns-topic-name or kafka-topic-name

Search integration

domain-name/index-name/type-name