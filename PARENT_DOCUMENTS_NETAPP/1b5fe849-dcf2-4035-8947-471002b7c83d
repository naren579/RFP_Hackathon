
                   <p style="text-align: center">
                       <b>Title:</b> StorageGRID collects metrics even if you don’t add any limits, so you can understand traffic
trends.<br>
                       <b>Bounding box:</b> x1=184, y1=826, x2=1566, y2=1972
                   </p>
                   <div align="center"><table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Field</td>
      <td>Description</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Type</td>
      <td>The type of limit you want to apply to the network traffic matched by the rule.\nFor example, you can limit bandwidth or request rate.\nNote: You can create policies to limit aggregate bandwidth or to limit per-\nrequest bandwidth. However, StorageGRID can’t limit both types of bandwidth\nat the same time. When aggregate bandwidth is in use, per-request bandwidth\nis unavailable. Conversely, when per-request bandwidth is in use, aggregate\nbandwidth is unavailable. Aggregate bandwidth limits might impose an\nadditional minor performance impact on non-limited traffic.\nFor bandwidth limits, StorageGRID applies the policy that best matches the\ntype of limit set. For example, if you have a policy that limits traffic in only one\ndirection, then traffic in the opposite direction will be unlimited, even if there is\ntraffic that matches additional policies that have bandwidth limits. StorageGRID\nimplements "best" matches for bandwidth limits in the following order:\n• Exact IP address (/32 mask)\n• Exact bucket name\n• Bucket regex\n• Tenant\n• Endpoint\n• Non-exact CIDR matches (not /32)\n• Inverse matches</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Applies to</td>
      <td>Whether this limit applies to client read requests (GET or HEAD) or write\nrequests (PUT, POST, or DELETE).</td>
    </tr>
  </tbody>
</table></div>
                   <hr>
                